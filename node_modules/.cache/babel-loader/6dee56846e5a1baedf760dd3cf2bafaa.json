{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Desktop\\\\paineldaterra\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MapComponent from './components/MapComponent';\nimport ChartComponent from './components/ChartComponent';\nimport './App.css';\nconst App = () => {\n  const [chartData, setChartData] = useState({/* Dados iniciais dos gráficos */});\n\n  // Função para atualizar os gráficos com base na seleção do mapa\n  //const handleMapInteraction = (selectedRegion) => {\n  // Atualizar chartData aqui com base no selectedRegion\n  //setChartData(newData);\n  //};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MapComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })));\n};\nexport default App;","map":{"version":3,"names":["React","useState","MapComponent","ChartComponent","App","chartData","setChartData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Gustavo/Desktop/paineldaterra/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport MapComponent from './components/MapComponent';\r\nimport ChartComponent from './components/ChartComponent';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const [chartData, setChartData] = useState({ /* Dados iniciais dos gráficos */ });\r\n\r\n    // Função para atualizar os gráficos com base na seleção do mapa\r\n    //const handleMapInteraction = (selectedRegion) => {\r\n        // Atualizar chartData aqui com base no selectedRegion\r\n        //setChartData(newData);\r\n    //};\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"map-container\">\r\n                <MapComponent/>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n                <ChartComponent/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAO,WAAW;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,CAAE,kCAAmC,CAAC;;EAEjF;EACA;EACI;EACA;EACJ;;EAEA,oBACID,KAAA,CAAAO,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBd,KAAA,CAAAO,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1Bd,KAAA,CAAAO,aAAA,CAACL,YAAY;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACb,CAAC,eACNd,KAAA,CAAAO,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5Bd,KAAA,CAAAO,aAAA,CAACJ,cAAc;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACf,CACJ,CAAC;AAEd,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}