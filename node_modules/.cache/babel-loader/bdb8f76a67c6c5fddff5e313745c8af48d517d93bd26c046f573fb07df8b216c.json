{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Desktop\\\\paineldaterra\\\\src\\\\components\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  municipio\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  useEffect(() => {\n    // Inicializar o mapa\n    const map = L.map(mapRef.current).setView([-23.5, -51.5], 7); // Ajuste a visão inicial conforme necessário\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(map);\n\n    // Definir o caminho do arquivo GeoJSON baseado no município selecionado\n    let geojsonFile = '';\n    if (municipio === 'Paraná') {\n      geojsonFile = '/assets/municipio_escolhaummunicipio.geojson';\n    } else {\n      const formattedMunicipio = municipio.toLowerCase().replace(/ /g, '_'); // Formatar o nome do município para o nome do arquivo\n      geojsonFile = `/assets/municipio_${formattedMunicipio}.geojson`;\n    }\n\n    // Carregar e exibir o arquivo GeoJSON\n    d3.json(geojsonFile).then(geojsonData => {\n      L.geoJSON(geojsonData).addTo(map);\n    }).catch(error => {\n      console.error('Erro ao carregar o arquivo GeoJSON:', error);\n    });\n    return () => {\n      map.remove();\n    };\n  }, [municipio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: '500px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n_s(MapComponent, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","d3","L","jsxDEV","_jsxDEV","MapComponent","municipio","_s","mapRef","map","current","setView","tileLayer","attribution","addTo","geojsonFile","formattedMunicipio","toLowerCase","replace","json","then","geojsonData","geoJSON","catch","error","console","remove","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Gustavo/Desktop/paineldaterra/src/components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport L from 'leaflet';\r\n\r\nconst MapComponent = ({ municipio }) => {\r\n    const mapRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Inicializar o mapa\r\n        const map = L.map(mapRef.current).setView([-23.5, -51.5], 7); // Ajuste a visão inicial conforme necessário\r\n\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '© OpenStreetMap contributors',\r\n        }).addTo(map);\r\n\r\n        // Definir o caminho do arquivo GeoJSON baseado no município selecionado\r\n        let geojsonFile = '';\r\n        if (municipio === 'Paraná') {\r\n            geojsonFile = '/assets/municipio_escolhaummunicipio.geojson';\r\n        } else {\r\n            const formattedMunicipio = municipio.toLowerCase().replace(/ /g, '_'); // Formatar o nome do município para o nome do arquivo\r\n            geojsonFile = `/assets/municipio_${formattedMunicipio}.geojson`;\r\n        }\r\n\r\n        // Carregar e exibir o arquivo GeoJSON\r\n        d3.json(geojsonFile).then(geojsonData => {\r\n            L.geoJSON(geojsonData).addTo(map);\r\n        }).catch(error => {\r\n            console.error('Erro ao carregar o arquivo GeoJSON:', error);\r\n        });\r\n\r\n        return () => {\r\n            map.remove();\r\n        };\r\n    }, [municipio]);\r\n\r\n    return <div ref={mapRef} style={{ height: '500px', width: '100%' }}></div>;\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,CAAC,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,MAAM,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,GAAG,GAAGP,CAAC,CAACO,GAAG,CAACD,MAAM,CAACE,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE9DT,CAAC,CAACU,SAAS,CAAC,oDAAoD,EAAE;MAC9DC,WAAW,EAAE;IACjB,CAAC,CAAC,CAACC,KAAK,CAACL,GAAG,CAAC;;IAEb;IACA,IAAIM,WAAW,GAAG,EAAE;IACpB,IAAIT,SAAS,KAAK,QAAQ,EAAE;MACxBS,WAAW,GAAG,8CAA8C;IAChE,CAAC,MAAM;MACH,MAAMC,kBAAkB,GAAGV,SAAS,CAACW,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;MACvEH,WAAW,GAAG,qBAAqBC,kBAAkB,UAAU;IACnE;;IAEA;IACAf,EAAE,CAACkB,IAAI,CAACJ,WAAW,CAAC,CAACK,IAAI,CAACC,WAAW,IAAI;MACrCnB,CAAC,CAACoB,OAAO,CAACD,WAAW,CAAC,CAACP,KAAK,CAACL,GAAG,CAAC;IACrC,CAAC,CAAC,CAACc,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CAAC;IAEF,OAAO,MAAM;MACTf,GAAG,CAACiB,MAAM,CAAC,CAAC;IAChB,CAAC;EACL,CAAC,EAAE,CAACpB,SAAS,CAAC,CAAC;EAEf,oBAAOF,OAAA;IAAKuB,GAAG,EAAEnB,MAAO;IAACoB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC9E,CAAC;AAAC3B,EAAA,CAjCIF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}